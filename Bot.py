import os
import logging
import requests
from apscheduler.schedulers.blocking import BlockingScheduler
from telegram import Bot

logging.basicConfig(level=logging.INFO, format='%(asctime)s %(message)s')

TOKEN = os.getenv('TELEGRAM_TOKEN')
CHAT_ID = os.getenv('CHAT_ID')

if not TOKEN or not CHAT_ID:
    logging.error("TELEGRAM_TOKEN –∏ CHAT_ID –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã")
    exit(1)

bot = Bot(token=TOKEN)

TARGETS = {
    'ethereum': {'buy': 1600, 'sell': 2000},
    'binancecoin': {'buy': 270, 'sell': 350},
}

def check_prices():
    try:
        ids = ','.join(TARGETS.keys())
        url = f'https://api.coingecko.com/api/v3/simple/price?ids={ids}&vs_currencies=usd'
        resp = requests.get(url, timeout=10)
        data = resp.json()
        for coin, th in TARGETS.items():
            price = data.get(coin, {}).get('usd')
            if price is None: continue
            if price <= th['buy']:
                bot.send_message(int(CHAT_ID), f"üíö –¶–µ–Ω–∞ {coin} —É–ø–∞–ª–∞ –¥–æ {price} USD ‚Äî –ø–æ—Ä–∞ –ø–æ–∫—É–ø–∞—Ç—å! (—Ü–µ–ª—å: {th['buy']})")
            elif price >= th['sell']:
                bot.send_message(int(CHAT_ID), f"üî¥ –¶–µ–Ω–∞ {coin} –ø–æ–¥–Ω—è–ª–∞—Å—å –¥–æ {price} USD ‚Äî –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞–≤–∞—Ç—å! (—Ü–µ–ª—å: {th['sell']})")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ü–µ–Ω: {e}")

if __name__ == '__main__':
    bot.send_message(int(CHAT_ID), "üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Ü–µ–Ω—ã –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç!")
    scheduler = BlockingScheduler()
    scheduler.add_job(check_prices, 'interval', minutes=5)
    scheduler.start()
